name: ci

on:
  push:

env:
  DOCKER_REGISTRY: ghcr.io
  KOLLA_BRANCH: chameleoncloud/train
  OPENSTACK_BASE_RELEASE: train
  KOLLA_NAMESPACE: kolla-dev
jobs:
  buildx:
    environment: Chameleon CI
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      fail-fast: false
      matrix:
        build:
          - { profile: base }
          - { profile: base, subprofile: edge }
          - { profile: cyborg }
          - { profile: neutron }
          - { profile: zun, subprofile: compute }
        cfg:
          - { base_os: ubuntu, os_tag: 18.04, arch: x86_64, platform: linux/amd64 } # x86 PCs
          # - { base_os: ubuntu, os_tag: 18.04, arch: aarch64, platform: linux/arm64 } # Jetson nano
          # - { base_os: centos, os_tag: 8, arch: x86_64, platform: linux/amd64 } # associate site mgmt nodes
          # - { base_os: centos, os_tag: 7, arch: x86_64, platform: linux/amd64 } # UC and TACC mgmt nodes
          # - { base_os: debian, os_tag: 10, arch: aarch64, platform: linux/arm64 } # Raspberry Pi

    steps:
      - name: Set env to dev
        if: endsWith(github.ref, '/edge-builds')
        run: |
          echo "KOLLA_NAMESPACE=kolla-dev" >> $GITHUB_ENV
          echo "KOLLA_PUSH=yes" >> $GITHUB_ENV
      - name: Set env to staging
        if: endsWith(github.ref, '/staging')
        run: |
          echo "KOLLA_NAMESPACE=kolla-dev" >> $GITHUB_ENV
          echo "KOLLA_PUSH=yes" >> $GITHUB_ENV
      - name: Set env to production
        if: endsWith(github.ref, '/master')
        run: |
          echo "KOLLA_NAMESPACE=kolla" >> $GITHUB_ENV
          echo "KOLLA_PUSH=yes" >> $GITHUB_ENV
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
      - name: Cache python deps
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true
      - name: Login to Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Inspect builder
        run: |
          echo "Name:      ${{ steps.buildx.outputs.name }}"
          echo "Endpoint:  ${{ steps.buildx.outputs.endpoint }}"
          echo "Status:    ${{ steps.buildx.outputs.status }}"
          echo "Flags:     ${{ steps.buildx.outputs.flags }}"
          echo "Platforms: ${{ steps.buildx.outputs.platforms }}"
      - name: delete env files
        run: find . -type f -name "*.env" -delete
      - name: Run Kolla Build
        env:
          KOLLA_INSTALL_TYPE: source
          KOLLA_BUILD_PROFILE: ${{ matrix.build.profile }}
          KOLLA_BUILD_SUBPROFILE: ${{ matrix.build.subprofile }}
          KOLLA_BASE: ${{ matrix.cfg.base_os }}
          KOLLA_BASE_TAG: ${{ matrix.cfg.os_tag }}
          KOLLA_BASE_ARCH: ${{ matrix.cfg.arch }}
          DOCKER_DEFAULT_PLATFORM: ${{ matrix.cfg.platform }}
          DOCKER_TAG: ${{ env.OPENSTACK_BASE_RELEASE }}-${{ matrix.cfg.base_os }}${{ matrix.cfg.os_tag}}-${{ matrix.cfg.arch }}
        run: make build
      - name: List Build Images
        run: docker image ls
